@model VehicleShowRoomManager.Models.PurchaseOrderDetail
@{
    List<VehicleShowRoomManager.Models.VehicleModel> listModels = ViewBag.Models as List<VehicleShowRoomManager.Models.VehicleModel>;
    var modelSelectList = new SelectList(listModels, "Id", "ModelNumber", 1);


    List<VehicleShowRoomManager.Models.Brand> listBrands = ViewBag.Brands as List<VehicleShowRoomManager.Models.Brand>;
    var BrandSelectList = new SelectList(listBrands, "Id", "Name", 1);
}
<h3>Create Purchase Order</h3>
<div class="card">
    <div class="card-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Purchase Order</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-row container">
                    <div class="form-group col-md-5">
                        <label for="Brand" class="control-label">Brand </label>
                        <select class="form-control" id="brand-select">

                            @foreach (var item in listBrands)
                            {
                                <option value="@item.Id">@item.Name</option>
                            }
                        </select>
                    </div>

                    <div class="form-group col-md-5">
                        <label for="VehicleModelId" class="control-label">Model Number </label>
                        <select class="form-control" id="VehicleModelId" name="VehicleModelId">

                            <!--update by js-->
                        </select>
                    </div>
                </div>

                <div class="form-row container">
                    <div class="form-group col-md-5">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group col-md-5">
                        @Html.LabelFor(model => model.Color, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.EditorFor(model => model.Color, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-row container">
                    <div class="form-group col-md-5">
                        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group col-md-5">
                        @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control", min = 1 } })
                            @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>


<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section pageScripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        const brandSelectBox = document.getElementById("brand-select");
        const modelSelectBox = document.getElementById("VehicleModelId");
        $(function () {
            const id = brandSelectBox.value;

            $.ajax({
                url: "/ShowRoom/ListModelsByBrands/".concat(id),
                type: "GET",


                traditional: true,
                dataType: "html",
                success: function (data) {
                    updateModelSelectBox(data);
                },
                error: function () {
                    alert("An error has occured!!!");
                }
            });
        });

        brandSelectBox.addEventListener("change", e => {
            const id = e.target.value;

            $.ajax({
                url: "/ShowRoom/ListModelsByBrands/".concat(id),
                type: "GET",


                traditional: true,
                dataType: "html",
                success: function (data) {
                    updateModelSelectBox(data);
                },
                error: function () {
                    alert("An error has occured!!!");
                }
            });

        });

        function updateModelSelectBox(data) {

            modelSelectBox.innerHTML = "";
            modelSelectBox.innerHTML = data;
        }
    </script>
}
