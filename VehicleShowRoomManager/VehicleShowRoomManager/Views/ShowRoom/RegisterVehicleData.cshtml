@model VehicleShowRoomManager.Models.Vehicle

@{
    ViewBag.Title = "RegisterVehicleData";
}

<h2>Register Vehicle Data</h2>


@*<form action="@Url.Action("RegisterVehicleData", "ShowRoom", new {id = Model.Id })" method="post">*@
<div class="card">
    <div class="card-body">
        <form action="@Url.Action("RegisterVehicleData", "ShowRoom", new { id = Model.Id})" method="post" id="create-vehicle-form">
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Vehicle Information</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                @Html.HiddenFor(model => model.VehicleModelId)
                @Html.HiddenFor(model => model.Cover)

                <div class="form-row container">
                    <div class="form-group col-md-5">
                        @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.EnumDropDownListFor(model => model.Type, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group col-md-5">
                        @Html.LabelFor(model => model.Control, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.EnumDropDownListFor(model => model.Control, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Control, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-row container">
                    <div class="form-group col-md-5">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group col-md-5">
                        @Html.LabelFor(model => model.Color, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.EditorFor(model => model.Color, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>





                <div class="form-group">
                    @Html.LabelFor(model => model.Cover, htmlAttributes: new { @class = "control-label col-md-2" })
                    <img src="@Model.GetSmallImage()" alt="Alternate Text" />
                </div>





                <div class="form-group">
                    @Html.LabelFor(model => model.SalePrice, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.SalePrice, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SalePrice, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-row container">
                    <div class="form-group col-md-5">
                        @Html.LabelFor(model => model.VIN, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.EditorFor(model => model.VIN, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.VIN, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group col-md-5">
                        @Html.LabelFor(model => model.FN, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.EditorFor(model => model.FN, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FN, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control", rows = 10 })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>
@*</form>*@

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section pageScripts {
    @Scripts.Render("~/bundles/jqueryval")

    @*Add path file ckeditor.js to view*@
    <script src="~/Content/ckeditor5-build-classic/ckeditor.js"></script>

    @*Change edit description to ckeditor form*@
    <script>
        ClassicEditor
            .create(document.querySelector('#Description'), {
                // toolbar: [ 'heading', '|', 'bold', 'italic', 'link' ]
            })
            .then(editor => {
                window.editor = editor;
            })
            .catch(err => {
                console.error(err.stack);
            });
    </script>

    <style>
        .ck-editor__editable {
            min-height: 200px;
        }
    </style>
}
